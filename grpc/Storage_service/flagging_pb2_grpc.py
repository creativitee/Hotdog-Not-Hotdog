# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import flagging_pb2 as flagging__pb2


class PhotoFlaggingStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UserSubmit = channel.unary_unary(
        '/PhotoFlagging/UserSubmit',
        request_serializer=flagging__pb2.UserSubmitRequest.SerializeToString,
        response_deserializer=flagging__pb2.UserSubmitReply.FromString,
        )
    self.UserRequest = channel.unary_unary(
        '/PhotoFlagging/UserRequest',
        request_serializer=flagging__pb2.UserRequestRequest.SerializeToString,
        response_deserializer=flagging__pb2.UserRequestReply.FromString,
        )
    self.AdminSubmit = channel.unary_unary(
        '/PhotoFlagging/AdminSubmit',
        request_serializer=flagging__pb2.AdminSubmitRequest.SerializeToString,
        response_deserializer=flagging__pb2.AdminSubmitReply.FromString,
        )
    self.AdminRequest = channel.unary_unary(
        '/PhotoFlagging/AdminRequest',
        request_serializer=flagging__pb2.AdminRequestRequest.SerializeToString,
        response_deserializer=flagging__pb2.AdminRequestReply.FromString,
        )


class PhotoFlaggingServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def UserSubmit(self, request, context):
    """handle user uploading photo
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UserRequest(self, request, context):
    """handle user request photo
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AdminSubmit(self, request, context):
    """handle admin flag photo
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AdminRequest(self, request, context):
    """handle admin retrieving all hashes
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PhotoFlaggingServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UserSubmit': grpc.unary_unary_rpc_method_handler(
          servicer.UserSubmit,
          request_deserializer=flagging__pb2.UserSubmitRequest.FromString,
          response_serializer=flagging__pb2.UserSubmitReply.SerializeToString,
      ),
      'UserRequest': grpc.unary_unary_rpc_method_handler(
          servicer.UserRequest,
          request_deserializer=flagging__pb2.UserRequestRequest.FromString,
          response_serializer=flagging__pb2.UserRequestReply.SerializeToString,
      ),
      'AdminSubmit': grpc.unary_unary_rpc_method_handler(
          servicer.AdminSubmit,
          request_deserializer=flagging__pb2.AdminSubmitRequest.FromString,
          response_serializer=flagging__pb2.AdminSubmitReply.SerializeToString,
      ),
      'AdminRequest': grpc.unary_unary_rpc_method_handler(
          servicer.AdminRequest,
          request_deserializer=flagging__pb2.AdminRequestRequest.FromString,
          response_serializer=flagging__pb2.AdminRequestReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'PhotoFlagging', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
